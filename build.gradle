buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

version = 'git rev-parse --short HEAD'.execute().text.trim()
group = "corelin.plugins.library" //
archivesBaseName = "择忆霖心前置插件"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    mavenCentral()
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
    maven{
        name = 'github'
        url = 'https://repo1.maven.org/maven2'
    }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    implementation("org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT")
    implementation("org.ow2.asm:asm-debug-all:5.2")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.9.8")

}

shadowJar {
    dependencies {
        exclude 'spigot-1.12-R0.1-SNAPSHOT.jar'
        exclude(dependency('org.projectlombok:lombok'))
        exclude(dependency('org.spongepowered:spongeapi'))
        exclude(dependency('org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'))
        exclude(dependency('org.ow2.asm:asm-debug-all'))
        exclude(dependency('junit:junit'))
        exclude(dependency('net.md-5:bungeecord-chat'))
        exclude(dependency('org.hamcrest:hamcrest-core'))
        exclude(dependency('org.yaml:snakeyaml'))
        exclude(dependency('commons-lang:commons-lang'))
        exclude(dependency('com.google.guava:guava'))
        exclude(dependency('com.googlecode.json-simple:json-simple'))
    }
}


artifacts {
    archives shadowJar
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

